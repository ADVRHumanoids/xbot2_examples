XBotInterface:
  urdf_path: $(rospack find centauro_urdf)/urdf/centauro.urdf
  srdf_path: $(rospack find centauro_srdf)/srdf/centauro.srdf

ModelInterface:
  model_type: "RBDL"
  is_model_floating_base: "true"


## XBot2-related configuration

# hal
xbotcore_devices:

    joint_gz:
        names: []  # take all joint ids from srdf/urdf
        thread: rt_main
        
    joint_master:
        master: true  # this is a master device for 'joint'
        thread: rt_main
        
    imu_gz:
        names: []
        thread: rt_main    

    link_state_sensor:
        names: []
        thread: rt_main
        type: link_state_sensor


# threads
xbotcore_threads:
    rt_main:  {sched: fifo , prio: 60, period: 0.001, core_id: 2}
    nrt_main: {sched: other, prio: 0 , period: 0.005}


# plugins
xbotcore_plugins:

    joint_impedance:
        thread: rt_main
        type: joint_impedance
        params:
            control_joints: {value: [j_arm1_4], type: vector<string>}
            kp: {value: 200, type: double}
            kd: {value: 10, type: double}

    homing:
        thread: rt_main
        type: homing_example

    ros_io: {thread: nrt_main, type: ros_io}

    ros_control: {thread: nrt_main, type: ros_control}
    
    # cartesio: {thread: rt_main, type: cartesio_rt}


# global parameters
xbotcore_param:
    /jm/tx_filter_autostart: {value: true, type: bool}
    /jm/tx_filter_cutoff: {value: 2.0, type: double}
    /jm/enable_safety: {value: false, type: bool}
    /xbot_internal/ros_io/call_timeout: {value: 1.0, type: chrono}
    /rt_main/memory_hooks: {value: true, type: bool}






